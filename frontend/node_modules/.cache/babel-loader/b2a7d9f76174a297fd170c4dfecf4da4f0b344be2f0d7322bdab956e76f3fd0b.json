{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skk46\\\\OneDrive\\\\AppData\\\\Desktop\\\\chat-app-full\\\\chat-app\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const useChatContext = () => {\n  _s();\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChatContext must be used within a ChatProvider');\n  }\n  return context;\n};\n_s(useChatContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ChatProvider = ({\n  children\n}) => {\n  _s2();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [messageHistory, setMessageHistory] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState(0);\n\n  // ✅ Memoize functions to prevent recreating on every render\n  const addMessage = useCallback(message => {\n    setMessageHistory(prev => [...prev, message]);\n  }, []);\n  const login = useCallback(name => {\n    setUsername(name);\n    setIsLoggedIn(true);\n  }, []);\n  const logout = useCallback(() => {\n    setUsername('');\n    setIsLoggedIn(false);\n    setMessageHistory([]);\n    setOnlineUsers(0);\n  }, []);\n\n  // ✅ Create a stable value object\n  const value = {\n    username,\n    isLoggedIn,\n    messageHistory,\n    onlineUsers,\n    addMessage,\n    setMessageHistory,\n    setOnlineUsers,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s2(ChatProvider, \"umwl3ssuE6QLIFdeMNlExD3tAtM=\");\n_c = ChatProvider;\nexport default ChatContext;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","ChatContext","useChatContext","_s","context","Error","ChatProvider","children","_s2","username","setUsername","isLoggedIn","setIsLoggedIn","messageHistory","setMessageHistory","onlineUsers","setOnlineUsers","addMessage","message","prev","login","name","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/skk46/OneDrive/AppData/Desktop/chat-app-full/chat-app/frontend/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const useChatContext = () => {\r\n  const context = useContext(ChatContext);\r\n  if (!context) {\r\n    throw new Error('useChatContext must be used within a ChatProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState(0);\r\n\r\n  // ✅ Memoize functions to prevent recreating on every render\r\n  const addMessage = useCallback((message) => {\r\n    setMessageHistory((prev) => [...prev, message]);\r\n  }, []);\r\n\r\n  const login = useCallback((name) => {\r\n    setUsername(name);\r\n    setIsLoggedIn(true);\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setUsername('');\r\n    setIsLoggedIn(false);\r\n    setMessageHistory([]);\r\n    setOnlineUsers(0);\r\n  }, []);\r\n\r\n  // ✅ Create a stable value object\r\n  const value = {\r\n    username,\r\n    isLoggedIn,\r\n    messageHistory,\r\n    onlineUsers,\r\n    addMessage,\r\n    setMessageHistory,\r\n    setOnlineUsers,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <ChatContext.Provider value={value}>{children}</ChatContext.Provider>;\r\n};\r\n\r\nexport default ChatContext;"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMoB,UAAU,GAAGnB,WAAW,CAAEoB,OAAO,IAAK;IAC1CJ,iBAAiB,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAGtB,WAAW,CAAEuB,IAAI,IAAK;IAClCX,WAAW,CAACW,IAAI,CAAC;IACjBT,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,MAAM,GAAGxB,WAAW,CAAC,MAAM;IAC/BY,WAAW,CAAC,EAAE,CAAC;IACfE,aAAa,CAAC,KAAK,CAAC;IACpBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,KAAK,GAAG;IACZd,QAAQ;IACRE,UAAU;IACVE,cAAc;IACdE,WAAW;IACXE,UAAU;IACVH,iBAAiB;IACjBE,cAAc;IACdI,KAAK;IACLE;EACF,CAAC;EAED,oBAAOtB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACpB,GAAA,CArCWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAuCzB,eAAeL,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}