{"ast":null,"code":"import{createContext,useContext,useState,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext();export const useChatContext=()=>{const context=useContext(ChatContext);if(!context){throw new Error('useChatContext must be used within a ChatProvider');}return context;};export const ChatProvider=_ref=>{let{children}=_ref;const[username,setUsername]=useState('');const[isLoggedIn,setIsLoggedIn]=useState(false);const[messageHistory,setMessageHistory]=useState([]);const[onlineUsers,setOnlineUsers]=useState(0);// ✅ Ensure messageHistory is always an array\nconst safeSetMessageHistory=useCallback(messages=>{setMessageHistory(Array.isArray(messages)?messages:[]);},[]);// ✅ Memoize functions to prevent recreating on every render\nconst addMessage=useCallback(message=>{setMessageHistory(prev=>[...prev,message]);},[]);const login=useCallback(name=>{setUsername(name);setIsLoggedIn(true);},[]);const logout=useCallback(()=>{setUsername('');setIsLoggedIn(false);setMessageHistory([]);setOnlineUsers(0);},[]);// ✅ Create a stable value object\nconst value={username,isLoggedIn,messageHistory,onlineUsers,addMessage,setMessageHistory,setOnlineUsers,login,logout};return/*#__PURE__*/_jsx(ChatContext.Provider,{value:value,children:children});};export default ChatContext;","map":{"version":3,"names":["createContext","useContext","useState","useCallback","jsx","_jsx","ChatContext","useChatContext","context","Error","ChatProvider","_ref","children","username","setUsername","isLoggedIn","setIsLoggedIn","messageHistory","setMessageHistory","onlineUsers","setOnlineUsers","safeSetMessageHistory","messages","Array","isArray","addMessage","message","prev","login","name","logout","value","Provider"],"sources":["C:/Users/skk46/OneDrive/AppData/Desktop/chat-app-full/chat-app/frontend/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const useChatContext = () => {\r\n  const context = useContext(ChatContext);\r\n  if (!context) {\r\n    throw new Error('useChatContext must be used within a ChatProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState(0);\r\n\r\n  // ✅ Ensure messageHistory is always an array\r\n  const safeSetMessageHistory = useCallback((messages) => {\r\n    setMessageHistory(Array.isArray(messages) ? messages : []);\r\n  }, []);\r\n\r\n  // ✅ Memoize functions to prevent recreating on every render\r\n  const addMessage = useCallback((message) => {\r\n    setMessageHistory((prev) => [...prev, message]);\r\n  }, []);\r\n\r\n  const login = useCallback((name) => {\r\n    setUsername(name);\r\n    setIsLoggedIn(true);\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setUsername('');\r\n    setIsLoggedIn(false);\r\n    setMessageHistory([]);\r\n    setOnlineUsers(0);\r\n  }, []);\r\n\r\n  // ✅ Create a stable value object\r\n  const value = {\r\n    username,\r\n    isLoggedIn,\r\n    messageHistory,\r\n    onlineUsers,\r\n    addMessage,\r\n    setMessageHistory,\r\n    setOnlineUsers,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <ChatContext.Provider value={value}>{children}</ChatContext.Provider>;\r\n};\r\n\r\nexport default ChatContext;"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzE,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CAEjD;AACA,KAAM,CAAAmB,qBAAqB,CAAGlB,WAAW,CAAEmB,QAAQ,EAAK,CACtDJ,iBAAiB,CAACK,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAGA,QAAQ,CAAG,EAAE,CAAC,CAC5D,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAG,UAAU,CAAGtB,WAAW,CAAEuB,OAAO,EAAK,CAC1CR,iBAAiB,CAAES,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAED,OAAO,CAAC,CAAC,CACjD,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,KAAK,CAAGzB,WAAW,CAAE0B,IAAI,EAAK,CAClCf,WAAW,CAACe,IAAI,CAAC,CACjBb,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAc,MAAM,CAAG3B,WAAW,CAAC,IAAM,CAC/BW,WAAW,CAAC,EAAE,CAAC,CACfE,aAAa,CAAC,KAAK,CAAC,CACpBE,iBAAiB,CAAC,EAAE,CAAC,CACrBE,cAAc,CAAC,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAW,KAAK,CAAG,CACZlB,QAAQ,CACRE,UAAU,CACVE,cAAc,CACdE,WAAW,CACXM,UAAU,CACVP,iBAAiB,CACjBE,cAAc,CACdQ,KAAK,CACLE,MACF,CAAC,CAED,mBAAOzB,IAAA,CAACC,WAAW,CAAC0B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAnB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}