{"ast":null,"code":"import React from'react';import{ChatProvider,useChatContext}from'./context/ChatContext';import useWebSocket from'./hooks/useWebSocket';import LoginForm from'./components/LoginForm';import ChatHeader from'./components/ChatHeader';import ChatMessages from'./components/ChatMessages';import ChatInput from'./components/ChatInput';// ✅ Separate component that uses the context\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatApp=()=>{const{isLoggedIn}=useChatContext();// ✅ Call useWebSocket only once here\nconst{sendMessage,isConnected}=useWebSocket();if(!isLoggedIn){return/*#__PURE__*/_jsx(LoginForm,{});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto h-screen flex flex-col p-4\",children:[/*#__PURE__*/_jsx(ChatHeader,{}),/*#__PURE__*/_jsx(ChatMessages,{}),/*#__PURE__*/_jsx(ChatInput,{sendMessage:sendMessage,isConnected:isConnected})]})});};// ✅ Main App component that provides the context\nconst App=()=>{return/*#__PURE__*/_jsx(ChatProvider,{children:/*#__PURE__*/_jsx(ChatApp,{})});};export default App;","map":{"version":3,"names":["React","ChatProvider","useChatContext","useWebSocket","LoginForm","ChatHeader","ChatMessages","ChatInput","jsx","_jsx","jsxs","_jsxs","ChatApp","isLoggedIn","sendMessage","isConnected","className","children","App"],"sources":["C:/Users/skk46/OneDrive/AppData/Desktop/chat-app-full/chat-app/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { ChatProvider, useChatContext } from './context/ChatContext';\r\nimport useWebSocket from './hooks/useWebSocket';\r\nimport LoginForm from './components/LoginForm';\r\nimport ChatHeader from './components/ChatHeader';\r\nimport ChatMessages from './components/ChatMessages';\r\nimport ChatInput from './components/ChatInput';\r\n\r\n// ✅ Separate component that uses the context\r\nconst ChatApp = () => {\r\n  const { isLoggedIn } = useChatContext();\r\n  \r\n  // ✅ Call useWebSocket only once here\r\n  const { sendMessage, isConnected } = useWebSocket();\r\n\r\n  if (!isLoggedIn) {\r\n    return <LoginForm />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n      <div className=\"container mx-auto h-screen flex flex-col p-4\">\r\n        <ChatHeader />\r\n        <ChatMessages />\r\n        <ChatInput sendMessage={sendMessage} isConnected={isConnected} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ✅ Main App component that provides the context\r\nconst App = () => {\r\n  return (\r\n    <ChatProvider>\r\n      <ChatApp />\r\n    </ChatProvider>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,CAAEC,cAAc,KAAQ,uBAAuB,CACpE,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAEC,UAAW,CAAC,CAAGX,cAAc,CAAC,CAAC,CAEvC;AACA,KAAM,CAAEY,WAAW,CAAEC,WAAY,CAAC,CAAGZ,YAAY,CAAC,CAAC,CAEnD,GAAI,CAACU,UAAU,CAAE,CACf,mBAAOJ,IAAA,CAACL,SAAS,GAAE,CAAC,CACtB,CAEA,mBACEK,IAAA,QAAKO,SAAS,CAAC,2DAA2D,CAAAC,QAAA,cACxEN,KAAA,QAAKK,SAAS,CAAC,8CAA8C,CAAAC,QAAA,eAC3DR,IAAA,CAACJ,UAAU,GAAE,CAAC,cACdI,IAAA,CAACH,YAAY,GAAE,CAAC,cAChBG,IAAA,CAACF,SAAS,EAACO,WAAW,CAAEA,WAAY,CAACC,WAAW,CAAEA,WAAY,CAAE,CAAC,EAC9D,CAAC,CACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAG,GAAG,CAAGA,CAAA,GAAM,CAChB,mBACET,IAAA,CAACR,YAAY,EAAAgB,QAAA,cACXR,IAAA,CAACG,OAAO,GAAE,CAAC,CACC,CAAC,CAEnB,CAAC,CAED,cAAe,CAAAM,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}