{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skk46\\\\OneDrive\\\\AppData\\\\Desktop\\\\chat-app-full\\\\chat-app\\\\frontend\\\\src\\\\components\\\\ChatMessages.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { useChatContext } from '../context/ChatContext';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessages = () => {\n  _s();\n  const {\n    messageHistory,\n    username\n  } = useChatContext();\n  const messagesEndRef = useRef(null);\n\n  // ✅ Safely handle messageHistory - ensure it's always an array\n  const messages = Array.isArray(messageHistory) ? messageHistory : [];\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n    children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full text-gray-500\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet. Start the conversation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n      message: msg,\n      isOwnMessage: msg.username === username\n    }, msg._id || msg.id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessages, \"8Z/GKRZzBPpGIInY2oGOf0f1SYE=\", false, function () {\n  return [useChatContext];\n});\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["useEffect","useRef","useChatContext","MessageBubble","jsxDEV","_jsxDEV","ChatMessages","_s","messageHistory","username","messagesEndRef","messages","Array","isArray","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","message","isOwnMessage","_id","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/skk46/OneDrive/AppData/Desktop/chat-app-full/chat-app/frontend/src/components/ChatMessages.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { useChatContext } from '../context/ChatContext';\r\nimport MessageBubble from './MessageBubble';\r\n\r\nconst ChatMessages = () => {\r\n  const { messageHistory, username } = useChatContext();\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // ✅ Safely handle messageHistory - ensure it's always an array\r\n  const messages = Array.isArray(messageHistory) ? messageHistory : [];\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n      {messages.length === 0 ? (\r\n        <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n          <p>No messages yet. Start the conversation!</p>\r\n        </div>\r\n      ) : (\r\n        messages.map((msg, index) => (\r\n          <MessageBubble\r\n            key={msg._id || msg.id || index}\r\n            message={msg}\r\n            isOwnMessage={msg.username === username}\r\n          />\r\n        ))\r\n      )}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,cAAc;IAAEC;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EACrD,MAAMQ,cAAc,GAAGT,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMU,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACL,cAAc,CAAC,GAAGA,cAAc,GAAG,EAAE;;EAEpE;EACAR,SAAS,CAAC,MAAM;IAAA,IAAAc,qBAAA;IACd,CAAAA,qBAAA,GAAAJ,cAAc,CAACK,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKa,SAAS,EAAC,sCAAsC;IAAAC,QAAA,GAClDR,QAAQ,CAACS,MAAM,KAAK,CAAC,gBACpBf,OAAA;MAAKa,SAAS,EAAC,uDAAuD;MAAAC,QAAA,eACpEd,OAAA;QAAAc,QAAA,EAAG;MAAwC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,GAENb,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBtB,OAAA,CAACF,aAAa;MAEZyB,OAAO,EAAEF,GAAI;MACbG,YAAY,EAAEH,GAAG,CAACjB,QAAQ,KAAKA;IAAS,GAFnCiB,GAAG,CAACI,GAAG,IAAIJ,GAAG,CAACK,EAAE,IAAIJ,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhC,CACF,CACF,eACDnB,OAAA;MAAK2B,GAAG,EAAEtB;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,YAAY;EAAA,QACqBJ,cAAc;AAAA;AAAA+B,EAAA,GAD/C3B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}